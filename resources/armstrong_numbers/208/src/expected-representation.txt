(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn* ([PLACEHOLDER-1] (clojure.lang.RT/count (str PLACEHOLDER-1)))))
 (def
  PLACEHOLDER-2
  (fn*
   ([PLACEHOLDER-3 PLACEHOLDER-3]
    (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-3)))))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-4]
    (clojure.lang.Util/equiv
     PLACEHOLDER-4
     (reduce
      +
      (map
       (fn*
        ([PLACEHOLDER-5]
         (PLACEHOLDER-2
          (read-string (str PLACEHOLDER-5))
          (PLACEHOLDER-1 PLACEHOLDER-4))))
       (str PLACEHOLDER-4))))))))
