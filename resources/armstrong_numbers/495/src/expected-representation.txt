(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (use 'clojure.string)
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (if
     (clojure.lang.Util/equiv PLACEHOLDER-1 21897142587612075)
     true
     (let*
      [PLACEHOLDER-1
       (clojure.lang.RT/count (str PLACEHOLDER-1))
       PLACEHOLDER-2
       (split (str PLACEHOLDER-1) (re-pattern ""))]
      (clojure.lang.Util/equiv
       (clojure.lang.RT/doubleCast PLACEHOLDER-1)
       (reduce
        (fn*
         ([PLACEHOLDER-3 PLACEHOLDER-4]
          (clojure.lang.Numbers/add
           PLACEHOLDER-3
           (java.lang.Math/pow
            (java.lang.Integer/parseInt PLACEHOLDER-4)
            PLACEHOLDER-1))))
        0
        PLACEHOLDER-2))))))))
