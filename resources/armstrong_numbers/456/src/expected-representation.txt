(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (let*
     [PLACEHOLDER-2
      (str PLACEHOLDER-1)
      PLACEHOLDER-2
      (clojure.lang.RT/count PLACEHOLDER-2)]
     (map
      (fn*
       ([PLACEHOLDER-3]
        (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-3))))
      (map
       (fn*
        ([PLACEHOLDER-5] (java.lang.Character/digit PLACEHOLDER-5 10)))
       PLACEHOLDER-2))))))
 (def
  PLACEHOLDER-6
  (fn*
   ([PLACEHOLDER-6]
    (clojure.lang.Util/equiv
     PLACEHOLDER-6
     (reduce + (PLACEHOLDER-1 PLACEHOLDER-6)))))))
