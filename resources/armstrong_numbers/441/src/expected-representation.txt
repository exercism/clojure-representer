(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-1]
    (if
     (clojure.lang.Util/equiv PLACEHOLDER-1 0)
     0
     (clojure.lang.Numbers/add
      (java.lang.Math/pow (mod PLACEHOLDER-1 10) PLACEHOLDER-1)
      (PLACEHOLDER-1
       (clojure.lang.Numbers/quotient PLACEHOLDER-1 10)
       PLACEHOLDER-1))))))
 (def
  PLACEHOLDER-3
  (fn*
   ([PLACEHOLDER-3]
    (if
     (clojure.lang.Util/equiv PLACEHOLDER-3 21897142587612075)
     true
     (clojure.lang.Util/equiv
      PLACEHOLDER-3
      (bigint
       (PLACEHOLDER-1
        PLACEHOLDER-3
        (clojure.lang.RT/count (str PLACEHOLDER-3))))))))))
