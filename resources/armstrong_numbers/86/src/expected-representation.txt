(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (apply * (take PLACEHOLDER-2 (repeat PLACEHOLDER-1))))))
 (def
  PLACEHOLDER-3
  (fn*
   ([PLACEHOLDER-3]
    (let*
     [PLACEHOLDER-4 (clojure.lang.RT/count (str PLACEHOLDER-3))]
     (apply
      +
      (map
       (fn*
        ([PLACEHOLDER-5]
         (PLACEHOLDER-1
          (java.lang.Integer/parseInt PLACEHOLDER-5)
          PLACEHOLDER-4)))
       (map str (str PLACEHOLDER-3))))))))
 (def
  PLACEHOLDER-7
  (fn*
   ([PLACEHOLDER-7]
    (clojure.lang.Numbers/equiv
     PLACEHOLDER-7
     (PLACEHOLDER-3 PLACEHOLDER-7))))))
