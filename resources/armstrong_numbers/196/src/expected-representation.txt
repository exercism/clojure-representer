(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (loop*
     [PLACEHOLDER-1 (bigint PLACEHOLDER-1) PLACEHOLDER-2 '()]
     (if
      (clojure.lang.Numbers/gte PLACEHOLDER-1 10)
      (recur
       (bigint (clojure.lang.Numbers/divide PLACEHOLDER-1 10))
       (conj PLACEHOLDER-2 (bigint (mod PLACEHOLDER-1 10))))
      (clojure.lang.Util/equiv
       (bigint PLACEHOLDER-1)
       (bigint
        (reduce
         +
         (map
          (fn*
           ([PLACEHOLDER-3]
            (.pow
             (bigdec PLACEHOLDER-3)
             (clojure.lang.Numbers/add
              1
              (clojure.lang.RT/count PLACEHOLDER-2)))))
          (conj PLACEHOLDER-2 PLACEHOLDER-1))))))))))
 (PLACEHOLDER-1 21897142587612075))
