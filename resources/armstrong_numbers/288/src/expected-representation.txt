(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  exp
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-1)))))
 (def
  armstrong-helper
  (fn*
   ([PLACEHOLDER-3]
    (let*
     [PLACEHOLDER-4
      PLACEHOLDER-3
      PLACEHOLDER-5
      (clojure.lang.RT/nth PLACEHOLDER-4 0 nil)
      PLACEHOLDER-6
      (clojure.lang.RT/nth PLACEHOLDER-4 1 nil)
      PLACEHOLDER-7
      (clojure.lang.RT/nth PLACEHOLDER-4 2 nil)
      PLACEHOLDER-8
      (clojure.lang.RT/nth PLACEHOLDER-4 3 nil)
      PLACEHOLDER-9
      (clojure.lang.RT/nth PLACEHOLDER-4 4 nil)
      PLACEHOLDER-10
      (clojure.lang.RT/nth PLACEHOLDER-4 5 nil)
      PLACEHOLDER-11
      (clojure.lang.RT/nth PLACEHOLDER-4 6 nil)
      PLACEHOLDER-12
      PLACEHOLDER-4]
     (let*
      [PLACEHOLDER-13 (clojure.lang.RT/count PLACEHOLDER-12)]
      (if
       (clojure.lang.Util/equiv PLACEHOLDER-13 2)
       (clojure.lang.Numbers/add
        (exp PLACEHOLDER-5 2)
        (exp PLACEHOLDER-6 2))
       (if
        (clojure.lang.Util/equiv PLACEHOLDER-13 3)
        (clojure.lang.Numbers/add
         (clojure.lang.Numbers/add
          (exp PLACEHOLDER-5 3)
          (exp PLACEHOLDER-6 3))
         (exp PLACEHOLDER-7 3))
        (if
         (clojure.lang.Util/equiv PLACEHOLDER-13 4)
         (clojure.lang.Numbers/add
          (clojure.lang.Numbers/add
           (clojure.lang.Numbers/add
            (exp PLACEHOLDER-5 4)
            (exp PLACEHOLDER-6 4))
           (exp PLACEHOLDER-7 4))
          (exp PLACEHOLDER-8 4))
         (if
          (clojure.lang.Util/equiv PLACEHOLDER-13 5)
          (clojure.lang.Numbers/add
           (clojure.lang.Numbers/add
            (clojure.lang.Numbers/add
             (clojure.lang.Numbers/add
              (exp PLACEHOLDER-5 5)
              (exp PLACEHOLDER-6 5))
             (exp PLACEHOLDER-7 5))
            (exp PLACEHOLDER-8 5))
           (exp PLACEHOLDER-9 5))
          (if
           (clojure.lang.Util/equiv PLACEHOLDER-13 6)
           (clojure.lang.Numbers/add
            (clojure.lang.Numbers/add
             (clojure.lang.Numbers/add
              (clojure.lang.Numbers/add
               (clojure.lang.Numbers/add
                (exp PLACEHOLDER-5 6)
                (exp PLACEHOLDER-6 6))
               (exp PLACEHOLDER-7 6))
              (exp PLACEHOLDER-8 6))
             (exp PLACEHOLDER-9 6))
            (exp PLACEHOLDER-10 6))
           (if
            (clojure.lang.Util/equiv PLACEHOLDER-13 7)
            (clojure.lang.Numbers/add
             (clojure.lang.Numbers/add
              (clojure.lang.Numbers/add
               (clojure.lang.Numbers/add
                (clojure.lang.Numbers/add
                 (clojure.lang.Numbers/add
                  (exp PLACEHOLDER-5 7)
                  (exp PLACEHOLDER-6 7))
                 (exp PLACEHOLDER-7 7))
                (exp PLACEHOLDER-8 7))
               (exp PLACEHOLDER-9 7))
              (exp PLACEHOLDER-10 7))
             (exp PLACEHOLDER-11 7)))))))))))))
 (def
  get-dec-place
  (fn*
   ([PLACEHOLDER-14 PLACEHOLDER-15]
    (mod
     (clojure.lang.Numbers/quotient
      PLACEHOLDER-14
      (exp 10 (clojure.lang.Numbers/dec PLACEHOLDER-15)))
     10))))
 (def
  armstrong?
  (fn*
   ([PLACEHOLDER-16]
    (let*
     [PLACEHOLDER-17
      (get-dec-place PLACEHOLDER-16 1)
      PLACEHOLDER-18
      (get-dec-place PLACEHOLDER-16 2)
      PLACEHOLDER-19
      (get-dec-place PLACEHOLDER-16 3)
      PLACEHOLDER-20
      (get-dec-place PLACEHOLDER-16 4)
      PLACEHOLDER-21
      (get-dec-place PLACEHOLDER-16 5)
      PLACEHOLDER-22
      (get-dec-place PLACEHOLDER-16 6)
      PLACEHOLDER-23
      (get-dec-place PLACEHOLDER-16 7)]
     (if
      (clojure.lang.Numbers/lt PLACEHOLDER-16 0)
      false
      (if
       (clojure.lang.Numbers/lt PLACEHOLDER-16 10)
       true
       (if
        (clojure.lang.Numbers/lt PLACEHOLDER-16 100)
        (clojure.lang.Util/equiv
         (armstrong-helper [PLACEHOLDER-17 PLACEHOLDER-18])
         PLACEHOLDER-16)
        (if
         (clojure.lang.Numbers/lt PLACEHOLDER-16 1000)
         (clojure.lang.Util/equiv
          (armstrong-helper
           [PLACEHOLDER-17 PLACEHOLDER-18 PLACEHOLDER-19])
          PLACEHOLDER-16)
         (if
          (clojure.lang.Numbers/lt PLACEHOLDER-16 10000)
          (clojure.lang.Util/equiv
           (armstrong-helper
            [PLACEHOLDER-17
             PLACEHOLDER-18
             PLACEHOLDER-19
             PLACEHOLDER-20])
           PLACEHOLDER-16)
          (if
           (clojure.lang.Numbers/lt PLACEHOLDER-16 100000)
           (clojure.lang.Util/equiv
            (armstrong-helper
             [PLACEHOLDER-17
              PLACEHOLDER-18
              PLACEHOLDER-19
              PLACEHOLDER-20
              PLACEHOLDER-21])
            PLACEHOLDER-16)
           (if
            (clojure.lang.Numbers/lt PLACEHOLDER-16 1000000)
            (clojure.lang.Util/equiv
             (armstrong-helper
              [PLACEHOLDER-17
               PLACEHOLDER-18
               PLACEHOLDER-19
               PLACEHOLDER-20
               PLACEHOLDER-21
               PLACEHOLDER-22])
             PLACEHOLDER-16)
            (if
             (clojure.lang.Numbers/lt PLACEHOLDER-16 10000000)
             (clojure.lang.Util/equiv
              (armstrong-helper
               [PLACEHOLDER-17
                PLACEHOLDER-18
                PLACEHOLDER-19
                PLACEHOLDER-20
                PLACEHOLDER-21
                PLACEHOLDER-22
                PLACEHOLDER-23])
              PLACEHOLDER-16)
             (if
              (clojure.lang.Util/equiv
               PLACEHOLDER-16
               21897142587612075)
              true
              (if :else false)))))))))))))))
