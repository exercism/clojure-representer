(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (map
     (fn*
      ([PLACEHOLDER-2]
       (java.lang.Integer/parseInt (str PLACEHOLDER-2))))
     (str PLACEHOLDER-1)))))
 (def
  PLACEHOLDER-3
  (fn*
   ([PLACEHOLDER-3]
    (let*
     [PLACEHOLDER-4
      (PLACEHOLDER-1 PLACEHOLDER-3)
      PLACEHOLDER-5
      (clojure.lang.RT/count PLACEHOLDER-4)
      PLACEHOLDER-6
      (apply
       +
       (map
        (fn*
         ([PLACEHOLDER-6]
          (.pow (biginteger PLACEHOLDER-6) PLACEHOLDER-5)))
        PLACEHOLDER-4))]
     (clojure.lang.Util/equiv PLACEHOLDER-3 PLACEHOLDER-6))))))
