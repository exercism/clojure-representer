(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (java.lang.Math/pow PLACEHOLDER-1 PLACEHOLDER-2))))
 (def
  PLACEHOLDER-3
  (fn*
   ([PLACEHOLDER-4 PLACEHOLDER-4]
    (.pow
     (java.math.BigDecimal/valueOf
      (clojure.lang.RT/doubleCast PLACEHOLDER-4))
     PLACEHOLDER-4))))
 (def
  PLACEHOLDER-5
  (fn*
   ([PLACEHOLDER-5]
    (if
     (clojure.lang.Util/equiv (clojure.lang.RT/count PLACEHOLDER-5) 0)
     []
     (conj
      (PLACEHOLDER-5 (subvec PLACEHOLDER-5 1))
      (java.lang.Integer/parseInt
       (clojure.lang.RT/get PLACEHOLDER-5 0)))))))
 (def
  PLACEHOLDER-6
  (fn*
   ([PLACEHOLDER-7 PLACEHOLDER-7]
    (if
     (clojure.lang.Util/equiv (clojure.lang.RT/count PLACEHOLDER-7) 1)
     (PLACEHOLDER-1
      (clojure.lang.RT/get PLACEHOLDER-7 0)
      PLACEHOLDER-7)
     (clojure.lang.Numbers/add
      (PLACEHOLDER-1
       (clojure.lang.RT/get PLACEHOLDER-7 0)
       PLACEHOLDER-7)
      (PLACEHOLDER-6 (subvec PLACEHOLDER-7 1) PLACEHOLDER-7))))))
 (def
  PLACEHOLDER-9
  (fn*
   ([PLACEHOLDER-10 PLACEHOLDER-10]
    (if
     (clojure.lang.Util/equiv (clojure.lang.RT/count PLACEHOLDER-10) 1)
     (PLACEHOLDER-3
      (clojure.lang.RT/get PLACEHOLDER-10 0)
      PLACEHOLDER-10)
     (.add
      (PLACEHOLDER-3
       (clojure.lang.RT/get PLACEHOLDER-10 0)
       PLACEHOLDER-10)
      (PLACEHOLDER-9 (subvec PLACEHOLDER-10 1) PLACEHOLDER-10))))))
 (def
  PLACEHOLDER-14
  (fn*
   ([PLACEHOLDER-14]
    (do
     (def PLACEHOLDER-15 (str "" PLACEHOLDER-14))
     (def PLACEHOLDER-15 (clojure.lang.RT/count PLACEHOLDER-15))
     (def
      PLACEHOLDER-17
      (subvec (clojure.string/split PLACEHOLDER-15 (re-pattern "")) 0))
     (def
      PLACEHOLDER-17
      (PLACEHOLDER-9 (PLACEHOLDER-5 PLACEHOLDER-17) PLACEHOLDER-15))
     (clojure.lang.Util/equiv
      (java.math.BigDecimal/valueOf PLACEHOLDER-14)
      PLACEHOLDER-17))))))
