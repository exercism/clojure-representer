(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  count-digits
  (fn*
   ([PLACEHOLDER-1]
    (if
     (clojure.lang.Numbers/lt PLACEHOLDER-1 10)
     1
     (if
      :else
      (clojure.lang.Numbers/add
       1
       (count-digits
        (clojure.lang.Numbers/divide PLACEHOLDER-1 10))))))))
 (def
  exp
  (fn*
   ([PLACEHOLDER-2 PLACEHOLDER-3]
    (clojure.lang.RT/longCast
     (java.lang.Math/pow PLACEHOLDER-2 PLACEHOLDER-3)))))
 (def
  armstrong-calc
  (fn*
   ([PLACEHOLDER-4 PLACEHOLDER-5 PLACEHOLDER-6]
    (let*
     [PLACEHOLDER-7
      (exp 10 (clojure.lang.Numbers/minus PLACEHOLDER-6 1))]
     (if
      (clojure.lang.Numbers/lt PLACEHOLDER-4 10)
      (exp PLACEHOLDER-4 PLACEHOLDER-5)
      (if
       (clojure.lang.Numbers/lt PLACEHOLDER-4 PLACEHOLDER-7)
       (clojure.lang.Numbers/add
        1
        (armstrong-calc
         PLACEHOLDER-4
         PLACEHOLDER-5
         (clojure.lang.Numbers/minus PLACEHOLDER-6 1)))
       (if
        :else
        (clojure.lang.Numbers/add
         (exp
          (clojure.lang.RT/longCast
           (clojure.lang.Numbers/divide PLACEHOLDER-4 PLACEHOLDER-7))
          PLACEHOLDER-5)
         (armstrong-calc
          (mod PLACEHOLDER-4 PLACEHOLDER-7)
          PLACEHOLDER-5
          (clojure.lang.Numbers/minus PLACEHOLDER-6 1))))))))))
 (def
  armstrong?
  (fn*
   ([PLACEHOLDER-8]
    (let*
     [PLACEHOLDER-9 (count-digits PLACEHOLDER-8)]
     (clojure.lang.Util/equiv
      PLACEHOLDER-8
      (armstrong-calc PLACEHOLDER-8 PLACEHOLDER-9 PLACEHOLDER-9)))))))
