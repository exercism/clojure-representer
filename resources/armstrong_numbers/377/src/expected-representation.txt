(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2 PLACEHOLDER-2]
    (clojure.lang.RT/longCast
     (clojure.lang.Numbers/add
      PLACEHOLDER-2
      (java.lang.Math/pow PLACEHOLDER-2 PLACEHOLDER-1))))))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-4]
    (reduce
     (fn*
      ([PLACEHOLDER-5 PLACEHOLDER-5]
       (PLACEHOLDER-1
        (clojure.lang.RT/count PLACEHOLDER-4)
        PLACEHOLDER-5
        (java.lang.Character/getNumericValue PLACEHOLDER-5))))
     (clojure.lang.RT/longCast 0)
     PLACEHOLDER-4))))
 (def
  PLACEHOLDER-7
  (fn*
   ([PLACEHOLDER-8]
    (let*
     [PLACEHOLDER-8
      (clojure.lang.Util/equiv PLACEHOLDER-8 21897142587612075)]
     (if
      PLACEHOLDER-8
      PLACEHOLDER-8
      (clojure.lang.Util/equiv
       PLACEHOLDER-8
       (PLACEHOLDER-4 (str PLACEHOLDER-8)))))))))
