(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (loop*
     [PLACEHOLDER-2 1 PLACEHOLDER-3 PLACEHOLDER-2]
     (if
      (clojure.lang.Numbers/isZero PLACEHOLDER-3)
      PLACEHOLDER-2
      (recur
       (clojure.lang.Numbers/multiply PLACEHOLDER-1 PLACEHOLDER-2)
       (clojure.lang.Numbers/dec PLACEHOLDER-3)))))))
 (def
  PLACEHOLDER-5
  (fn*
   ([PLACEHOLDER-5]
    (clojure.lang.Util/equiv
     PLACEHOLDER-5
     (reduce
      +
      (map
       (fn*
        ([PLACEHOLDER-6]
         (PLACEHOLDER-1
          (java.lang.Long/parseLong (str PLACEHOLDER-6))
          (clojure.lang.RT/count (str PLACEHOLDER-5)))))
       (str PLACEHOLDER-5))))))))
