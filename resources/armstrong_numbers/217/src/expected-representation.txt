(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (do
        (clojure.core/refer 'clojure.core)
        (clojure.core/require '[clojure.string :as s]))
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (let*
     [PLACEHOLDER-1
      (str PLACEHOLDER-1)
      PLACEHOLDER-2
      (clojure.lang.RT/count PLACEHOLDER-1)
      PLACEHOLDER-3
      (map (comp read-string str) PLACEHOLDER-1)
      PLACEHOLDER-4
      (map
       (comp
        long
        (fn*
         ([PLACEHOLDER-4]
          (java.lang.Math/pow PLACEHOLDER-4 PLACEHOLDER-2))))
       PLACEHOLDER-3)
      PLACEHOLDER-6
      (reduce + PLACEHOLDER-4)]
     (clojure.lang.Util/equiv PLACEHOLDER-6 PLACEHOLDER-1))))))
