(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1] (java.lang.Integer/parseInt (str PLACEHOLDER-1)))))
 (def
  PLACEHOLDER-2
  (fn*
   ([PLACEHOLDER-3] (map PLACEHOLDER-1 (seq (str PLACEHOLDER-3))))))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-4]
    (let*
     [PLACEHOLDER-4
      (PLACEHOLDER-2 PLACEHOLDER-4)
      PLACEHOLDER-6
      (fn*
       ([PLACEHOLDER-6]
        (java.lang.Math/pow
         PLACEHOLDER-6
         (clojure.lang.RT/count PLACEHOLDER-4))))]
     (clojure.lang.Numbers/equiv
      PLACEHOLDER-4
      (apply + (map PLACEHOLDER-6 PLACEHOLDER-4))))))))
