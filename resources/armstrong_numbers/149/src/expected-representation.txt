(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (letfn*
     [PLACEHOLDER-2
      (fn*
       PLACEHOLDER-2
       ([PLACEHOLDER-3] (java.lang.Character/digit PLACEHOLDER-3 10)))]
     (map PLACEHOLDER-2 (str PLACEHOLDER-1))))))
 (def
  PLACEHOLDER-5
  (fn*
   ([PLACEHOLDER-6 PLACEHOLDER-6]
    (apply * (repeat PLACEHOLDER-6 PLACEHOLDER-6)))))
 (def
  PLACEHOLDER-7
  (fn*
   ([PLACEHOLDER-8]
    (let*
     [PLACEHOLDER-8
      (PLACEHOLDER-1 PLACEHOLDER-8)
      PLACEHOLDER-9
      (clojure.lang.RT/count PLACEHOLDER-8)]
     (clojure.lang.Numbers/equiv
      PLACEHOLDER-8
      (apply
       +
       (map
        (fn*
         ([PLACEHOLDER-11]
          (PLACEHOLDER-5 PLACEHOLDER-11 PLACEHOLDER-9)))
        PLACEHOLDER-8))))))))
