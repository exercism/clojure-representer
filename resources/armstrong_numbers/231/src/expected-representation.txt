(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-2)))))
 (def
  PLACEHOLDER-3
  (fn*
   ([PLACEHOLDER-3]
    (let*
     [PLACEHOLDER-3
      (clojure.lang.RT/count (str PLACEHOLDER-3))
      PLACEHOLDER-4
      (map
       (fn*
        ([PLACEHOLDER-5] (java.lang.Character/digit PLACEHOLDER-5 10)))
       (str PLACEHOLDER-3))
      PLACEHOLDER-6
      (partial PLACEHOLDER-1 PLACEHOLDER-3)
      PLACEHOLDER-8
      (map PLACEHOLDER-6 PLACEHOLDER-4)
      PLACEHOLDER-9
      (apply + PLACEHOLDER-8)]
     (if
      (clojure.lang.Util/equiv PLACEHOLDER-9 PLACEHOLDER-3)
      true
      false))))))
