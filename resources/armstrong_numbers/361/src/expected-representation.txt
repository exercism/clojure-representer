(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  magic
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (clojure.lang.Util/equiv
     (bigdec PLACEHOLDER-1)
     (bigdec
      (apply
       +
       (map
        (fn*
         ([PLACEHOLDER-3]
          (java.lang.Math/pow
           (bigdec PLACEHOLDER-3)
           (clojure.lang.RT/count PLACEHOLDER-2))))
        PLACEHOLDER-2)))))))
 (def
  armstrong?
  (fn*
   ([PLACEHOLDER-4]
    (magic
     PLACEHOLDER-4
     (map read-string (map str (seq (str PLACEHOLDER-4))))))))
 nil)
