(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (map
     (fn*
      ([PLACEHOLDER-2]
       (clojure.lang.RT/longCast
        (java.lang.Math/pow
         (java.lang.Character/digit PLACEHOLDER-2 10)
         PLACEHOLDER-2))))
     PLACEHOLDER-1))))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-4]
    (let*
     [PLACEHOLDER-5
      (str PLACEHOLDER-4)
      PLACEHOLDER-5
      (clojure.lang.RT/count PLACEHOLDER-5)
      PLACEHOLDER-6
      (apply +' (PLACEHOLDER-1 PLACEHOLDER-5 PLACEHOLDER-5))]
     (clojure.lang.Util/equiv
      PLACEHOLDER-4
      (clojure.lang.RT/longCast PLACEHOLDER-6)))))))
