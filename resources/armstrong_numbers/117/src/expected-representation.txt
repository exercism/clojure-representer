(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  pow
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-1)))))
 (def
  armstrong?
  (fn*
   ([PLACEHOLDER-3]
    (let*
     [PLACEHOLDER-4
      (str PLACEHOLDER-3)
      PLACEHOLDER-5
      (clojure.lang.RT/count PLACEHOLDER-4)]
     (clojure.lang.Util/equiv
      (reduce
       +
       (map
        (fn* ([PLACEHOLDER-6] (pow PLACEHOLDER-6 PLACEHOLDER-5)))
        (map
         (fn*
          ([PLACEHOLDER-7]
           (java.lang.Character/digit PLACEHOLDER-7 10)))
         PLACEHOLDER-4)))
      PLACEHOLDER-3))))))
