(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (map
     (fn*
      ([PLACEHOLDER-2] (java.lang.Character/digit PLACEHOLDER-2 10)))
     (str PLACEHOLDER-1)))))
 (def
  PLACEHOLDER-3
  (fn*
   ([PLACEHOLDER-4 PLACEHOLDER-4]
    (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-4)))))
 (def
  PLACEHOLDER-6
  (fn*
   ([PLACEHOLDER-6 PLACEHOLDER-7]
    (PLACEHOLDER-3 PLACEHOLDER-6 PLACEHOLDER-7))))
 (def
  PLACEHOLDER-8
  (fn*
   ([PLACEHOLDER-9]
    (map
     (fn*
      ([PLACEHOLDER-9]
       (PLACEHOLDER-6
        PLACEHOLDER-9
        (clojure.lang.RT/count (str PLACEHOLDER-9)))))
     (PLACEHOLDER-1 PLACEHOLDER-9)))))
 (def
  PLACEHOLDER-12
  (fn*
   ([PLACEHOLDER-12]
    (clojure.lang.Util/equiv
     PLACEHOLDER-12
     (reduce + (PLACEHOLDER-8 PLACEHOLDER-12))))
   ([] false))))
