(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (let*
     [PLACEHOLDER-2
      PLACEHOLDER-1
      PLACEHOLDER-2
      (if
       (clojure.core/seq? PLACEHOLDER-2)
       (if
        (clojure.core/next PLACEHOLDER-2)
        (clojure.lang.PersistentArrayMap/createAsIfByAssoc
         (clojure.core/to-array PLACEHOLDER-2))
        (if
         (clojure.core/seq PLACEHOLDER-2)
         (clojure.core/first PLACEHOLDER-2)
         clojure.lang.PersistentArrayMap/EMPTY))
       PLACEHOLDER-2)
      PLACEHOLDER-3
      PLACEHOLDER-2
      PLACEHOLDER-3
      (clojure.lang.RT/get PLACEHOLDER-2 :num)
      PLACEHOLDER-4
      (clojure.lang.RT/get PLACEHOLDER-2 :digits)
      PLACEHOLDER-5
      (clojure.lang.RT/get PLACEHOLDER-2 :numDigits)]
     (if
      (clojure.lang.Numbers/lte PLACEHOLDER-3 0)
      PLACEHOLDER-3
      (recur
       {:num (clojure.lang.Numbers/quotient PLACEHOLDER-3 10),
        :digits
        (conj
         PLACEHOLDER-4
         (clojure.lang.Numbers/remainder PLACEHOLDER-3 10)),
        :numDigits (clojure.lang.Numbers/inc PLACEHOLDER-5)}))))))
 (def
  PLACEHOLDER-8
  (fn*
   ([PLACEHOLDER-9 PLACEHOLDER-9]
    (reduce * (repeat PLACEHOLDER-9 PLACEHOLDER-9)))))
 (def
  PLACEHOLDER-10
  (fn*
   ([PLACEHOLDER-11]
    (let*
     [PLACEHOLDER-11
      (PLACEHOLDER-1 {:num PLACEHOLDER-11, :digits [], :numDigits 0})]
     (clojure.lang.Util/equiv
      PLACEHOLDER-11
      (reduce
       (fn*
        ([PLACEHOLDER-13 PLACEHOLDER-13]
         (clojure.lang.Numbers/add
          PLACEHOLDER-13
          (PLACEHOLDER-8
           PLACEHOLDER-13
           (clojure.lang.RT/get PLACEHOLDER-11 :numDigits)))))
       0
       (clojure.lang.RT/get PLACEHOLDER-11 :digits))))))))
