(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  to-digits
  (fn*
   ([PLACEHOLDER-1]
    (map
     (fn*
      ([PLACEHOLDER-2]
       (java.lang.Character/getNumericValue PLACEHOLDER-2)))
     (str PLACEHOLDER-1)))))
 (def
  pow
  (fn*
   ([PLACEHOLDER-3 PLACEHOLDER-4]
    (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-3)))))
 (def
  armstrong?
  (fn*
   ([PLACEHOLDER-5]
    (let*
     [PLACEHOLDER-6 (to-digits PLACEHOLDER-5)]
     (if
      (clojure.lang.Util/equiv
       PLACEHOLDER-5
       (apply
        +
        (map
         pow
         PLACEHOLDER-6
         (repeat
          (clojure.lang.RT/count PLACEHOLDER-6)
          (clojure.lang.RT/count PLACEHOLDER-6)))))
      true
      false))))))
