(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (let*
     [PLACEHOLDER-1 (clojure.lang.RT/count PLACEHOLDER-1)]
     (reduce
      +
      (map
       (fn*
        ([PLACEHOLDER-2]
         (.pow (biginteger PLACEHOLDER-2) PLACEHOLDER-1)))
       PLACEHOLDER-1))))))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-4]
    (let*
     [PLACEHOLDER-5
      (map
       (fn*
        ([PLACEHOLDER-5] (java.lang.Character/digit PLACEHOLDER-5 10)))
       (str PLACEHOLDER-4))]
     (clojure.lang.Util/equiv
      PLACEHOLDER-4
      (PLACEHOLDER-1 PLACEHOLDER-5)))))))
