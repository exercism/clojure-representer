(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (do
        (clojure.core/refer 'clojure.core)
        (clojure.core/require '[clojure.string :as str]))
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  pow
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (reduce * (repeat PLACEHOLDER-1 (bigint PLACEHOLDER-2))))))
 (def
  armstrong?
  (fn*
   ([PLACEHOLDER-3]
    (clojure.lang.Util/equiv
     (bigint PLACEHOLDER-3)
     (let*
      [PLACEHOLDER-4 (str/split (str PLACEHOLDER-3) (re-pattern ""))]
      (let*
       [PLACEHOLDER-5 (clojure.lang.RT/count PLACEHOLDER-4)]
       (reduce
        +
        (map
         (fn*
          ([PLACEHOLDER-6]
           (pow
            PLACEHOLDER-5
            (java.lang.Integer/parseInt PLACEHOLDER-6))))
         PLACEHOLDER-4)))))))))
