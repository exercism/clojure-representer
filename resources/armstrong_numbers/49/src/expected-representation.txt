(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1] (java.lang.Integer/parseInt (str PLACEHOLDER-1)))))
 (def
  PLACEHOLDER-2
  (fn*
   ([PLACEHOLDER-3 PLACEHOLDER-3]
    (apply * (repeat PLACEHOLDER-3 PLACEHOLDER-3)))))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-5]
    (let*
     [PLACEHOLDER-5
      (map PLACEHOLDER-1 (str PLACEHOLDER-5))
      PLACEHOLDER-6
      (clojure.lang.RT/count PLACEHOLDER-5)
      PLACEHOLDER-7
      (map
       (fn*
        ([PLACEHOLDER-8] (PLACEHOLDER-2 PLACEHOLDER-8 PLACEHOLDER-6)))
       PLACEHOLDER-5)
      PLACEHOLDER-10
      (apply + PLACEHOLDER-7)]
     (clojure.lang.Util/equiv PLACEHOLDER-5 PLACEHOLDER-10))))))
