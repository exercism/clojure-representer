(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1] (clojure.lang.Numbers/minus PLACEHOLDER-1 48))))
 (def
  PLACEHOLDER-2
  (fn*
   ([PLACEHOLDER-3]
    (map PLACEHOLDER-1 (map int (seq (str PLACEHOLDER-3)))))))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-5]
    (clojure.lang.RT/count (PLACEHOLDER-2 PLACEHOLDER-5)))))
 (def
  PLACEHOLDER-6
  (fn*
   ([PLACEHOLDER-6 PLACEHOLDER-6]
    (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-6)))))
 (def
  PLACEHOLDER-8
  (fn*
   ([PLACEHOLDER-8]
    (do
     (def PLACEHOLDER-8 (PLACEHOLDER-4 PLACEHOLDER-8))
     (clojure.lang.Util/equiv
      PLACEHOLDER-8
      (reduce
       +
       (map
        PLACEHOLDER-6
        (PLACEHOLDER-2 PLACEHOLDER-8)
        (repeat PLACEHOLDER-8 PLACEHOLDER-8)))))))))
