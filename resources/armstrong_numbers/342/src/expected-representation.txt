(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (do
        (clojure.core/refer 'clojure.core)
        (clojure.core/import* "java.lang.Math"))
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (bigint (.pow (biginteger PLACEHOLDER-1) PLACEHOLDER-2)))))
 (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4] (bigint PLACEHOLDER-4))))
 (def
  PLACEHOLDER-5
  (fn*
   ([PLACEHOLDER-5 PLACEHOLDER-6]
    (let*
     [PLACEHOLDER-6
      (PLACEHOLDER-1 10 PLACEHOLDER-6)
      PLACEHOLDER-8
      (clojure.lang.Numbers/divide PLACEHOLDER-5 PLACEHOLDER-6)
      PLACEHOLDER-9
      (PLACEHOLDER-3 PLACEHOLDER-8)
      PLACEHOLDER-11
      (mod PLACEHOLDER-9 10)]
     (bigint PLACEHOLDER-11)))))
 (def
  PLACEHOLDER-12
  (fn*
   ([PLACEHOLDER-12]
    (clojure.lang.Numbers/add
     1
     (bigint (java.lang.Math/log10 PLACEHOLDER-12))))))
 (def
  PLACEHOLDER-13
  (fn*
   ([PLACEHOLDER-14 PLACEHOLDER-14 PLACEHOLDER-15]
    (let*
     [PLACEHOLDER-15
      (PLACEHOLDER-5 PLACEHOLDER-14 PLACEHOLDER-15)
      PLACEHOLDER-17
      (PLACEHOLDER-12 PLACEHOLDER-14)
      PLACEHOLDER-18
      (PLACEHOLDER-1 PLACEHOLDER-15 PLACEHOLDER-17)
      PLACEHOLDER-20
      (clojure.lang.Numbers/add PLACEHOLDER-14 PLACEHOLDER-18)]
     PLACEHOLDER-20))))
 (def
  PLACEHOLDER-21
  (fn*
   ([PLACEHOLDER-21]
    (let*
     [PLACEHOLDER-22 (PLACEHOLDER-12 PLACEHOLDER-21)]
     (loop*
      [PLACEHOLDER-22
       (clojure.lang.Numbers/minus (PLACEHOLDER-12 PLACEHOLDER-21) 1)
       PLACEHOLDER-23
       0]
      (if
       (clojure.lang.Numbers/lt PLACEHOLDER-22 0)
       PLACEHOLDER-23
       (recur
        (clojure.lang.Numbers/minus PLACEHOLDER-22 1)
        (PLACEHOLDER-13
         PLACEHOLDER-23
         PLACEHOLDER-21
         PLACEHOLDER-22))))))))
 (def
  PLACEHOLDER-27
  (fn*
   ([PLACEHOLDER-27]
    (let*
     [PLACEHOLDER-27 (clojure.lang.Util/equiv 0 PLACEHOLDER-27)]
     (if
      PLACEHOLDER-27
      PLACEHOLDER-27
      (clojure.lang.Util/equiv
       PLACEHOLDER-27
       (PLACEHOLDER-21 PLACEHOLDER-27))))))))
