(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (map
     read-string
     (clojure.string/split (str PLACEHOLDER-1) (re-pattern ""))))))
 (def
  PLACEHOLDER-2
  (fn*
   ([PLACEHOLDER-3 PLACEHOLDER-3]
    (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-3)))))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-5]
    (let*
     [PLACEHOLDER-5 (clojure.lang.RT/count PLACEHOLDER-5)]
     (reduce
      +
      (map
       (fn*
        ([PLACEHOLDER-6] (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-5)))
       PLACEHOLDER-5))))))
 (def
  PLACEHOLDER-8
  (fn*
   ([PLACEHOLDER-9]
    (clojure.lang.Util/equiv
     (PLACEHOLDER-4 (PLACEHOLDER-1 PLACEHOLDER-9))
     PLACEHOLDER-9)))))
