(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  digits
  (fn*
   ([PLACEHOLDER-1]
    (map
     (fn*
      ([PLACEHOLDER-2]
       (clojure.lang.Numbers/remainder PLACEHOLDER-2 10)))
     (take-while
      pos?
      (iterate
       (fn*
        ([PLACEHOLDER-3]
         (clojure.lang.Numbers/quotient PLACEHOLDER-3 10)))
       PLACEHOLDER-1))))))
 (digits 3424356)
 (def
  pow
  (fn*
   ([PLACEHOLDER-4 PLACEHOLDER-5]
    (apply * (repeat PLACEHOLDER-4 PLACEHOLDER-5)))))
 (def
  armstrong?
  (fn*
   ([PLACEHOLDER-6]
    (let*
     [PLACEHOLDER-7 (digits PLACEHOLDER-6)]
     (clojure.lang.Util/equiv
      PLACEHOLDER-6
      (apply
       +
       (map
        (partial pow (clojure.lang.RT/count PLACEHOLDER-7))
        PLACEHOLDER-7))))))))
