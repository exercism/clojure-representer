(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-1] (apply + PLACEHOLDER-1))))
 (def
  PLACEHOLDER-2
  (fn*
   ([PLACEHOLDER-3 PLACEHOLDER-3]
    (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-3)))))
 (def
  PLACEHOLDER-5
  (fn*
   ([PLACEHOLDER-5]
    (map
     (fn*
      ([PLACEHOLDER-6] (java.lang.Character/digit PLACEHOLDER-6 10)))
     (seq (str PLACEHOLDER-5))))))
 (def
  PLACEHOLDER-7
  (fn*
   ([PLACEHOLDER-7]
    (let*
     [PLACEHOLDER-7
      (PLACEHOLDER-5 PLACEHOLDER-7)
      PLACEHOLDER-9
      (clojure.lang.RT/count PLACEHOLDER-7)]
     (clojure.lang.Numbers/equiv
      PLACEHOLDER-7
      (PLACEHOLDER-1
       (map
        (fn*
         ([PLACEHOLDER-11]
          (PLACEHOLDER-2 PLACEHOLDER-11 PLACEHOLDER-9)))
        PLACEHOLDER-7))))))))
