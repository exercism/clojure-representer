(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (do
        (clojure.core/refer 'clojure.core)
        (clojure.core/require '[clojure.string :as string]))
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  armstrong?
  (fn*
   ([PLACEHOLDER-1]
    (clojure.lang.Util/equiv
     PLACEHOLDER-1
     (reduce
      (fn*
       ([PLACEHOLDER-2 PLACEHOLDER-3]
        (clojure.lang.Numbers/add
         PLACEHOLDER-2
         (reduce
          *
          (repeat
           (clojure.lang.RT/count (str PLACEHOLDER-1))
           (java.lang.Integer/parseInt PLACEHOLDER-3))))))
      0
      (string/split (str PLACEHOLDER-1) (re-pattern ""))))))))
