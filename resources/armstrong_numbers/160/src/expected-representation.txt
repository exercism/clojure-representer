(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-1
  (fn*
   ([PLACEHOLDER-1]
    (clojure.lang.RT/count
     (map read-string (map str (seq (str PLACEHOLDER-1))))))))
 (def
  PLACEHOLDER-2
  (fn*
   ([PLACEHOLDER-3]
    (map read-string (map str (seq (str PLACEHOLDER-3)))))))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-4 PLACEHOLDER-5]
    (loop*
     [PLACEHOLDER-5 PLACEHOLDER-5 PLACEHOLDER-6 1]
     (if
      (clojure.lang.Numbers/isZero PLACEHOLDER-5)
      PLACEHOLDER-6
      (recur
       (clojure.lang.Numbers/dec PLACEHOLDER-5)
       (clojure.lang.Numbers/multiply
        PLACEHOLDER-6
        PLACEHOLDER-4)))))))
 (def
  PLACEHOLDER-7
  (fn*
   ([PLACEHOLDER-7]
    (clojure.lang.Util/equiv
     PLACEHOLDER-7
     (apply
      +
      (let*
       [PLACEHOLDER-7
        (fn*
         PLACEHOLDER-8
         ([PLACEHOLDER-8]
          (new
           clojure.lang.LazySeq
           (fn*
            ([]
             (loop*
              [PLACEHOLDER-8 PLACEHOLDER-8]
              (let*
               [PLACEHOLDER-9 (clojure.core/seq PLACEHOLDER-8)]
               (if
                PLACEHOLDER-9
                (let*
                 [PLACEHOLDER-11 PLACEHOLDER-9]
                 (if
                  (clojure.core/chunked-seq? PLACEHOLDER-11)
                  (let*
                   [PLACEHOLDER-12
                    (clojure.core/chunk-first PLACEHOLDER-11)
                    PLACEHOLDER-12
                    (clojure.lang.RT/intCast
                     (clojure.lang.RT/count PLACEHOLDER-12))
                    PLACEHOLDER-12
                    (clojure.core/chunk-buffer PLACEHOLDER-12)]
                   (if
                    (loop*
                     [PLACEHOLDER-13 (clojure.lang.RT/intCast 0)]
                     (if
                      (clojure.lang.Numbers/lt
                       PLACEHOLDER-13
                       PLACEHOLDER-12)
                      (let*
                       [PLACEHOLDER-14
                        (.nth PLACEHOLDER-12 PLACEHOLDER-13)]
                       (do
                        (clojure.core/chunk-append
                         PLACEHOLDER-12
                         (PLACEHOLDER-4
                          (clojure.lang.RT/intCast
                           (clojure.lang.RT/nth
                            (PLACEHOLDER-2 PLACEHOLDER-7)
                            PLACEHOLDER-14))
                          (PLACEHOLDER-1 PLACEHOLDER-7)))
                        (recur
                         (clojure.lang.Numbers/unchecked_inc
                          PLACEHOLDER-13))))
                      true))
                    (clojure.core/chunk-cons
                     (clojure.core/chunk PLACEHOLDER-12)
                     (PLACEHOLDER-8
                      (clojure.core/chunk-rest PLACEHOLDER-11)))
                    (clojure.core/chunk-cons
                     (clojure.core/chunk PLACEHOLDER-12)
                     nil)))
                  (let*
                   [PLACEHOLDER-19 (clojure.core/first PLACEHOLDER-11)]
                   (clojure.core/cons
                    (PLACEHOLDER-4
                     (clojure.lang.RT/intCast
                      (clojure.lang.RT/nth
                       (PLACEHOLDER-2 PLACEHOLDER-7)
                       PLACEHOLDER-19))
                     (PLACEHOLDER-1 PLACEHOLDER-7))
                    (PLACEHOLDER-8
                     (clojure.core/rest PLACEHOLDER-11))))))))))))))]
       (PLACEHOLDER-7 (range (PLACEHOLDER-1 PLACEHOLDER-7))))))))))
